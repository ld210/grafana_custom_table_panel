{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"lodash\"","webpack:///./transformers.ts","webpack:///external \"@grafana/ui\"","webpack:///external \"app/core/utils/flatten\"","webpack:///external \"app/core/time_series2\"","webpack:///external \"app/core/table_model\"","webpack:///./renderer.ts","webpack:///external \"moment\"","webpack:///external \"app/core/utils/kbn\"","webpack:///./editor.ts","webpack:///./column_options.ts","webpack:///./module.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","__WEBPACK_EXTERNAL_MODULE__0__","mergeTablesIntoModel","a","transformers","areRowsMatching","columns","row","otherRow","foundFieldToMatch","columnIndex","length","dst","tables","_i","arguments","model","_table_model2","slice","rows","columnNames","columnsUnion","reduce","acc","series","forEach","col","text","push","columnIndexMapper","map","flattenedRows","seriesIndex","mapper","alteredRow","to","from","mergedRows","compactedRows","rowIndex","offset","match","_lodash2","findIndex","matchedRow","timeseries_to_rows","description","getColumns","transform","data","panel","type","y","datapoints","dp","target","timeseries_to_columns","points","timeKey","toString","time","point","values","timeseries_aggregations","_time_series2","alias","getFlotPairs","cells","stats","annotations","evt","title","tags","table","noTableIndex","message","String","fromCharCode","apply","concat","json","names","maxDocs","Math","min","doc","flattened","_flatten2","propName","z","_a","tableCol","filterable","isObject","JSON","stringify","transformDataToTable","transformer","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__5__","_ui","TableRenderer","isUtc","sanitize","templateSrv","theme","this","initColumns","setTable","formatters","colorState","colIndex","column","styles","style","regex","_kbn2","stringToJsRegex","pattern","replace","createColumnFormatter","getColorForValue","thresholds","getColorFromHexRgbOrName","colors","defaultCellFormatter","v","isArray","join","escape","_this","isString","isNaN","Number","parseInt","date","_moment2","utc","rawValue","format","dateFormat","mappingType","valueMaps","setColorState","rangeMaps","valueFormatter_1","getValueFormat","unit","decimals","colorMode","numericValue","renderRowVariables","scopedVars","formatColumnValue","renderCell","addWidthHack","cellStyle","textStyle","cellClasses","cellClass","cell","columnHtml","hidden","preserveFormat","link","__cell","cellLink","linkUrl","encodeURIComponent","cellLinkTooltip","linkTooltip","cellTarget","linkTargetBlank","num","icon","color","display","render","page","pageSize","startPos","endPos","html","rowClasses","rowClass","cellHtml","rowStyle","render_values","newRow","__WEBPACK_EXTERNAL_MODULE__7__","__WEBPACK_EXTERNAL_MODULE__8__","TablePanelEditorCtrl","undefined","$scope","$q","uiSegmentSrv","editor","panelCtrl","ctrl","_transformers","fontSizes","addColumnSegment","newPlusButton","$inject","updateTransformHints","canSetColumns","columnsHelpMessage","getColumnOptions","dataRaw","segments","newSegment","find","plusButton","removeColumn","without","restrict","scope","templateUrl","controller","ColumnOptionsCtrl","obj","activeStyleIndex","unitFormats","getValueFormats","colorModes","columnTypes","dateFormats","mappingTypes","getColumnNames","onColorChange","setUnitFormat","subItem","addColumnStyle","stylesCount","indexToInsert","splice","removeColumnStyle","invertColorOrder","index","ref","copy","styleIndex","colorIndex","newColor","columnOptionsTab","PanelCtrl","TablePanelCtrl","_jquery2","_interopRequireDefault","_config2","_editor","u","setPrototypeOf","__proto__","Array","constructor","b","__","$injector","annotationsSrv","$sanitize","variableSrv","_super","panelDefaults","targets","showHeader","scroll","fontSize","sort","desc","pageIndex","fields","events","on","onInitEditMode","onInitPanelActions","__extends","addEditorTab","tablePanelEditor","_column_options","actions","click","issueQueries","datasource","getAnnotations","dashboard","range","then","onDataError","err","onDataReceived","dataList","renderer","_renderer","isTimezoneUtc","exportCsv","$new","tableData","publishAppEvent","templateHtml","modalClass","elem","attrs","pageCount","renderPanel","panelElem","parents","rootElem","tbodyElem","footerElem","css","font-size","addClass","empty","ceil","startPage","max","endPage","paginationList","activeClass","pageLinkElem","append","max-height","height","panelHeight","tooltip","selector","el","currentTarget","filterData","options","operator","setAdhocFilter","unbindDestroy","$on","off","renderData","renderingCompleted","_sdk","MetricsPanelCtrl","loadPluginCss"],"mappings":"oOACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,KACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,KAGAF,EAAAD,QA0DA,OArDAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GAA0CK,cAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,YAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,cAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA2B,SAC3B,WAAiC,OAAA3B,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAkB,EAAAC,GAAsD,OAAAlB,OAAAmB,UAAAC,eAAA3B,KAAAwB,EAAAC,IAGtDhC,EAAAmC,EAAA,GAIAnC,IAAAoC,EAAA,eAAAC,EAAAR,GClFA1B,EAAAD,QAAAoC,gICuBgBC,uBAvBhB,IAAArB,EAAAkB,EAAApC,EAAA,IAAAwC,EAAAJ,EACApC,EAAA,IAAAK,EAAA+B,EACApC,EAAA,IAAAa,EAAAuB,EACApC,EAAA,aAAAoC,EAAAd,GAAA,OAAAA,KAAAE,WAAAF,EAAA,CAAAQ,QAAAR,GAEA,IAAMmB,KAIN,SAASC,EAAgBC,EAASC,EAAKC,GAErC,IADA,IAAIC,KACKC,EAAc,EAAGA,EAAcJ,EAAQK,OAAQD,IACtD,YAAIH,EAAIG,aAA8BF,EAASE,IAC7C,GAAIH,EAAIG,KAAiBF,EAASE,GAChC,mBAAO,IAEAH,EAAIG,aAA8BF,EAASE,KACpDD,MAGJ,OAAOA,EAGH,SAAUP,EAAqBU,OAAkB,IAAAC,KAAAC,EAAA,EAAAA,EAAAC,UAAAJ,OAAAG,IAAAD,EAAAC,EAAA,GAAAC,UAAAD,GACrD,IAAME,EAAQJ,GAAO,IAAIK,EAAAxB,QAEzB,GAAyB,IAArBsB,UAAUJ,OACZ,OAAOK,EAGT,GAAyB,IAArBD,UAAUJ,OAGZ,OAFAK,EAAMV,QAAUO,EAAO,GAAGhB,eAAe,WAAiBgB,EAAO,GAAGP,QAAOY,WAC3EF,EAAMG,KAAON,EAAO,GAAGhB,eAAe,QAAcgB,EAAO,GAAGM,KAAID,WAC3DF,EAIT,IAAMI,KAGAC,EAAeR,EAAOK,QAAQI,OAAO,SAACC,EAAKC,GAQ/C,OAPAA,EAAOlB,QAAQmB,QAAQ,SAACC,GACd,IAAAC,EAAAD,EAAAC,cACJP,EAAYO,KACdP,EAAYO,GAAQJ,EAAIZ,OACxBY,EAAIK,KAAKF,MAGNH,OAMHM,EAAoBhB,EAAOiB,IAAI,SAAAN,GAAU,OAAAA,EAAOlB,QAAQwB,IAAI,SAAAJ,GAAO,OAAAN,EAAYM,EAAZC,UAGnEI,EAAgBlB,EAAOS,OAAO,SAACC,EAAKC,EAAQQ,GAChD,IAAMC,EAASJ,EAAkBG,GASjC,OARAR,EAAOL,KAAKM,QAAQ,SAAAlB,GAClB,IAAM2B,KAEND,EAAOR,QAAQ,SAACU,EAAIC,GAClBF,EAAWC,GAAM5B,EAAI6B,KAEvBb,EAAIK,KAAKM,KAEJX,OAIHc,KACAC,EAAgBP,EAAcT,OAAO,SAACC,EAAKhB,EAAKgC,GACpD,IAAKF,EAAWE,GAAW,CAIzB,IAFA,IAAIC,EAASD,EAAW,EAEjBC,EAAST,EAAcpB,QAAQ,CAEpC,IAAM8B,EAAQC,EAAAjD,QAAEkD,UAAUZ,EAAe,SAAAvB,GAAY,OAAAH,EAAgBgB,EAAcd,EAA9BC,IAA8CgC,GACnG,KAAIC,GAAS,GAcX,MAXA,IAFA,IAAMG,EAAab,EAAcU,GAExB/B,EAAc,EAAGA,EAAcW,EAAaV,OAAQD,aACvDH,EAAIG,aAA8BkC,EAAWlC,KAC/CH,EAAIG,GAAekC,EAAWlC,IAIlC2B,EAAWI,GAASG,EAEpBJ,EAASC,EAAQ,EAMrBlB,EAAIK,KAAKrB,GAEX,OAAOgB,OAKT,OAFAP,EAAMV,QAAUe,EAChBL,EAAMG,KAAOmB,EACNtB,EAGTZ,EAAYyC,mBAAA,CACVC,YAAa,sBACbC,WAAY,WACV,UAEFC,UAAW,SAACC,EAAMC,EAAOlC,GACvBA,EAAMV,UAAaqB,KAAM,OAAQwB,KAAM,SAAYxB,KAAM,WAAcA,KAAM,UAE7E,IAAK,IAAI5D,EAAI,EAAGA,EAAIkF,EAAKtC,OAAQ5C,IAE/B,IADA,IAAMyD,EAASyB,EAAKlF,GACXqF,EAAI,EAAGA,EAAI5B,EAAO6B,WAAW1C,OAAQyC,IAAK,CACjD,IAAME,EAAK9B,EAAO6B,WAAWD,GAC7BpC,EAAMG,KAAKS,MAAM0B,EAAG,GAAI9B,EAAO+B,OAAQD,EAAG,QAMlDlD,EAAYoD,sBAAA,CACVV,YAAa,yBACbC,WAAY,WACV,UAEFC,UAAW,SAACC,EAAMC,EAAOlC,GACvBA,EAAMV,QAAQsB,MAAOD,KAAM,OAAQwB,KAAM,SAKzC,IAFA,IAAMM,KAEG1F,EAAI,EAAGA,EAAIkF,EAAKtC,OAAQ5C,IAAK,CACpC,IAAMyD,EAASyB,EAAKlF,GACpBiD,EAAMV,QAAQsB,MAAOD,KAAMH,EAAO+B,SAElC,IAAK,IAAIH,EAAI,EAAGA,EAAI5B,EAAO6B,WAAW1C,OAAQyC,IAAK,CACjD,IAAME,EAAK9B,EAAO6B,WAAWD,GACvBM,EAAUJ,EAAG,GAAGK,WAEjBF,EAAOC,GAIVD,EAAOC,GAAS3F,GAAKuF,EAAG,IAHxBG,EAAOC,IAAaE,KAAMN,EAAG,IAC7BG,EAAOC,GAAS3F,GAAKuF,EAAG,KAO9B,IAAK,IAAMM,KAAQH,EAAQ,CACzB,IAAMI,EAAQJ,EAAOG,GACfE,GAAUD,EAAMD,MAEtB,IAAS7F,EAAI,EAAGA,EAAIkF,EAAKtC,OAAQ5C,IAAK,CACpC,IAAMiB,EAAQ6E,EAAM9F,GACpB+F,EAAOlC,KAAK5C,GAGdgC,EAAMG,KAAKS,KAAKkC,MAKtB1D,EAAY2D,wBAAA,CACVjB,YAAa,2BACbC,WAAY,WACV,QACIpB,KAAM,MAAO3C,MAAO,QACpB2C,KAAM,MAAO3C,MAAO,QACpB2C,KAAM,MAAO3C,MAAO,QACpB2C,KAAM,QAAS3C,MAAO,UACtB2C,KAAM,UAAW3C,MAAO,YACxB2C,KAAM,QAAS3C,MAAO,WAG5BgE,UAAW,SAACC,EAAMC,EAAOlC,GACvB,IAAIjD,EAAGqF,EAGP,IAFApC,EAAMV,QAAQsB,MAAOD,KAAM,WAEtB5D,EAAI,EAAGA,EAAImF,EAAM5C,QAAQK,OAAQ5C,IACpCiD,EAAMV,QAAQsB,MAAOD,KAAMuB,EAAM5C,QAAQvC,GAAG4D,OAG9C,IAAK5D,EAAI,EAAGA,EAAIkF,EAAKtC,OAAQ5C,IAAK,CAChC,IAAMyD,EAAS,IAAIwC,EAAAvE,SACjB4D,WAAYJ,EAAKlF,GAAGsF,WACpBY,MAAOhB,EAAKlF,GAAGwF,SAGjB/B,EAAO0C,aAAa,aACpB,IAAMC,GAAS3C,EAAOyC,OAEtB,IAAKb,EAAI,EAAGA,EAAIF,EAAM5C,QAAQK,OAAQyC,IACpCe,EAAMvC,KAAKJ,EAAO4C,MAAMlB,EAAM5C,QAAQ8C,GAAGpE,QAG3CgC,EAAMG,KAAKS,KAAKuC,MAKtB/D,EAAYiE,YAAA,CACVvB,YAAa,cACbC,WAAY,WACV,UAEFC,UAAW,SAACC,EAAMC,EAAOlC,GAMvB,GALAA,EAAMV,QAAQsB,MAAOD,KAAM,OAAQwB,KAAM,SACzCnC,EAAMV,QAAQsB,MAAOD,KAAM,UAC3BX,EAAMV,QAAQsB,MAAOD,KAAM,SAC3BX,EAAMV,QAAQsB,MAAOD,KAAM,SAEtBsB,GAASA,EAAKoB,aAA2C,IAA5BpB,EAAKoB,YAAY1D,OAInD,IAAK,IAAI5C,EAAI,EAAGA,EAAIkF,EAAKoB,YAAY1D,OAAQ5C,IAAK,CAChD,IAAMuG,EAAMrB,EAAKoB,YAAYtG,GAC7BiD,EAAMG,KAAKS,MAAM0C,EAAIV,KAAMU,EAAIC,MAAOD,EAAI3C,KAAM2C,EAAIE,UAK1DpE,EAAYqE,MAAA,CACV3B,YAAa,QACbC,WAAY,SAAAE,GACV,IAAKA,GAAwB,IAAhBA,EAAKtC,OAChB,SAIF,GAAoB,IAAhBsC,EAAKtC,OACP,OAAWsC,EAAK,GAAG3C,QAAOY,QAI5B,IAAME,KAcN,OAXgB6B,EAAK3B,OAAO,SAACC,EAAKC,GAQhC,OAPAA,EAAOlB,QAAQmB,QAAQ,SAAAC,GACb,IAAAC,EAAAD,EAAAC,cACJP,EAAYO,KACdP,EAAYO,GAAQJ,EAAIZ,OACxBY,EAAIK,KAAKF,MAGNH,QAKXyB,UAAW,SAACC,EAAMC,EAAOlC,GACvB,GAAKiC,GAAwB,IAAhBA,EAAKtC,OAAlB,CAIA,IAAM+D,EAAehC,EAAAjD,QAAEkD,UAAUM,EAAM,SAAC5E,GAAW,gBAAAA,EAAE8E,OACrD,GAAIuB,GAAgB,EAClB,MACEC,QAAS,oBAAoBC,OAAOC,aAClC,GAAKH,GACN,yDAILxE,EAAoB4E,aAAA,CAAC9D,GAAK+D,OAAK9B,OAInC7C,EAAY4E,KAAA,CACVlC,YAAa,YACbC,WAAY,SAAAE,GACV,IAAKA,GAAwB,IAAhBA,EAAKtC,OAChB,SAIF,IADA,IAAMsE,KACGlH,EAAI,EAAGA,EAAIkF,EAAKtC,OAAQ5C,IAAK,CACpC,IAAMyD,EAASyB,EAAKlF,GACpB,GAAoB,SAAhByD,EAAO2B,KAMX,IADA,IAAM+B,EAAUC,KAAKC,IAAI5D,EAAO6B,WAAW1C,OAAQ,KAC1CyC,EAAI,EAAGA,EAAI8B,EAAS9B,IAAK,CAChC,IAAMiC,EAAM7D,EAAO6B,WAAWD,GACxBkC,KAAYC,EAAA9F,SAAQ4F,EAAK,MAC/B,IAAK,IAAMG,KAAYF,EACrBL,EAAMO,OAKZ,OAAO9C,EAAAjD,QAAEqC,IAAImD,EAAO,SAACjG,EAAOM,GAC1B,OAASqC,KAAMrC,EAAKN,MAAOM,MAG/B0D,UAAW,SAACC,EAAMC,EAAOlC,GAGvB,IAFA,IAAIjD,EAAGqF,EAAGqC,EAEW3E,EAAA,EAAA4E,EAAAxC,EAAM5C,QAANQ,EAAA4E,EAAA/E,OAAAG,IAAe,CAA/B,IACG6E,GAAkBhE,KADT+D,EAAA5E,GACsBa,MAGjCsB,EAAKtC,OAAS,GAAKsC,EAAK,GAAG2C,aAC7BD,EAASC,eAGX5E,EAAMV,QAAQsB,KAAK+D,GAOrB,IAJ6B,IAAzB3E,EAAMV,QAAQK,QAChBK,EAAMV,QAAQsB,MAAOD,KAAM,SAGxB5D,EAAI,EAAGA,EAAIkF,EAAKtC,OAAQ5C,IAAK,CAChC,IAAMyD,EAASyB,EAAKlF,GAEpB,IAAKqF,EAAI,EAAGA,EAAI5B,EAAO6B,WAAW1C,OAAQyC,IAAK,CAC7C,IAAME,EAAK9B,EAAO6B,WAAWD,GACvBU,KAEN,GAAIpB,EAAAjD,QAAEoG,SAASvC,IAAOJ,EAAM5C,QAAQK,OAAS,EAAG,CAC9C,IAAM2E,KAAYC,EAAA9F,SAAQ6D,EAAI,MAC9B,IAAKmC,EAAI,EAAGA,EAAIvC,EAAM5C,QAAQK,OAAQ8E,IACpC3B,EAAOlC,KAAK0D,EAAUpC,EAAM5C,QAAQmF,GAAGzG,aAGzC8E,EAAOlC,KAAKkE,KAAKC,UAAUzC,IAG7BtC,EAAMG,KAAKS,KAAKkC,SAsBf1D,iBAAc4F,qBAhBvB,SAA8B/C,EAAMC,GAClC,IAAMlC,EAAQ,IAAIC,EAAAxB,QAElB,IAAKwD,GAAwB,IAAhBA,EAAKtC,OAChB,OAAOK,EAGT,IAAMiF,EAAc7F,EAAa8C,EAAMF,WACvC,IAAKiD,EACH,MAAQtB,QAAS,eAAiBzB,EAAMF,UAAY,cAItD,OADAiD,EAAYjD,UAAUC,EAAMC,EAAOlC,GAC5BA,kBCpWTlD,EAAAD,QAAAqI,iBCAApI,EAAAD,QAAAsI,iBCAArI,EAAAD,QAAAuI,iBCAAtI,EAAAD,QAAAwI,wGCAA,IAAAxH,EAAAkB,EAAApC,EAAA,IAAAwC,EAAAJ,EACApC,EAAA,IAAAK,EAAA+B,EACApC,EAAA,IACA2I,EAAA3I,EAAA,YAAAoC,EAAAd,GAAA,OAAAA,KAAAE,WAAAF,EAAA,CAAAQ,QAAAR,GAEA,IAAAsH,EAAA,WAIE,SAAAA,EACUrD,EACAuB,EACA+B,EACAC,EACAC,EACAC,GALAC,KAAA1D,QACA0D,KAAAnC,QACAmC,KAAAJ,QACAI,KAAAH,WACAG,KAAAF,cACAE,KAAAD,QAERC,KAAKC,cA6WT,OA1WEN,EAAA3G,UAAAkH,SAAA,SAASrC,GACPmC,KAAKnC,MAAQA,EAEbmC,KAAKC,eAGPN,EAAA3G,UAAAiH,YAAA,WACED,KAAKG,cACLH,KAAKI,cAEL,IAAK,IAAIC,EAAW,EAAGA,EAAWL,KAAKnC,MAAMnE,QAAQK,OAAQsG,IAAY,CACvE,IAAMC,EAASN,KAAKnC,MAAMnE,QAAQ2G,GAClCC,EAAO3C,MAAQ2C,EAAOvF,KAEtB,IAAK,IAAI5D,EAAI,EAAGA,EAAI6I,KAAK1D,MAAMiE,OAAOxG,OAAQ5C,IAAK,CACjD,IAAMqJ,EAAQR,KAAK1D,MAAMiE,OAAOpJ,GAE1BsJ,EAAQC,EAAA7H,QAAI8H,gBAAgBH,EAAMI,SACxC,GAAIN,EAAOvF,KAAKc,MAAM4E,GAAQ,CAC5BH,EAAOE,MAAQA,EAEXA,EAAMnD,QACRiD,EAAO3C,MAAQ2C,EAAOvF,KAAK8F,QAAQJ,EAAOD,EAAMnD,QAGlD,OAIJ2C,KAAKG,WAAWE,GAAYL,KAAKc,sBAAsBR,KAI3DX,EAAA3G,UAAA+H,iBAAA,SAAiB3I,EAAOoI,GACtB,IAAKA,EAAMQ,WACT,OAAO,KAET,IAAK,IAAI7J,EAAIqJ,EAAMQ,WAAWjH,OAAQ5C,EAAI,EAAGA,IAC3C,GAAIiB,GAASoI,EAAMQ,WAAW7J,EAAI,GAChC,SAAOuI,EAAAuB,0BAAyBT,EAAMU,OAAO/J,GAAI6I,KAAKD,OAG1D,SAAOL,EAAAuB,0BAAyBT,EAAMU,OAAO,GAAIlB,KAAKD,QAGxDJ,EAAA3G,UAAAmI,qBAAA,SAAqBC,EAAGZ,GACtB,OAAU,MAANY,QAAcA,IAAgBA,EACzB,IAGLtF,EAAAjD,QAAEwI,QAAQD,KACZA,EAAIA,EAAEE,KAAK,OAGTd,GAASA,EAAMX,SACVG,KAAKH,SAASuB,GAEdtF,EAAAjD,QAAE0I,OAAOH,KAIpBzB,EAAA3G,UAAA8H,sBAAA,SAAsBR,GAAtB,IAAAkB,EAAAxB,KACE,IAAKM,EAAOE,MACV,OAAOR,KAAKmB,qBAGd,GAA0B,WAAtBb,EAAOE,MAAMjE,KACf,OAAO,SAAA6E,KAKT,GAA0B,SAAtBd,EAAOE,MAAMjE,KACf,OAAO,SAAA6E,GACL,SAAIA,EACF,MAAO,IAGLtF,EAAAjD,QAAEwI,QAAQD,KACZA,EAAIA,EAAE,IAIJtF,EAAAjD,QAAE4I,SAASL,KAAOM,MAAMC,OAAOP,KAAOA,EAAErH,OAAS,KACnDqH,EAAIQ,SAASR,EAAG,KAGlB,IAAIS,KAAOC,EAAAjJ,SAAOuI,GAMlB,OAJII,EAAK5B,QACPiC,EAAOA,EAAKE,OAEdzB,EAAOE,MAAMwB,SAAWZ,EACjBS,EAAKI,OAAO3B,EAAOE,MAAM0B,aAIpC,GAA0B,WAAtB5B,EAAOE,MAAMjE,KACf,OAAO,SAAA6E,GACDtF,EAAAjD,QAAEwI,QAAQD,KACZA,EAAIA,EAAEE,KAAK,OAGb,IAAMa,EAAc7B,EAAOE,MAAM2B,aAAe,EAEhD,GAAoB,IAAhBA,GAAqB7B,EAAOE,MAAM4B,UACpC,IAAK,IAAIjL,EAAI,EAAGA,EAAImJ,EAAOE,MAAM4B,UAAUrI,OAAQ5C,IAAK,CACtD,IAAM+D,EAAMoF,EAAOE,MAAM4B,UAAUjL,GAEnC,GAAU,OAANiK,GAQJ,IAAMtF,EAAAjD,QAAE4I,SAASL,IAAMO,OAAOzG,EAAI9C,SAAWuJ,OAAOP,IAAOlG,EAAI9C,QAAUgJ,EAEvE,OADAI,EAAKa,cAAcjB,EAAGd,EAAOE,OACtBgB,EAAKL,qBAAqBjG,EAAIH,KAAMuF,EAAOE,YATlD,GAAkB,SAAdtF,EAAI9C,MACN,OAAO8C,EAAIH,KAanB,GAAoB,IAAhBoH,GAAqB7B,EAAOE,MAAM8B,UACpC,IAASnL,EAAI,EAAGA,EAAImJ,EAAOE,MAAM8B,UAAUvI,OAAQ5C,IAGjD,GAFM+D,EAAMoF,EAAOE,MAAM8B,UAAUnL,GAEzB,OAANiK,GAOJ,GAAIO,OAAOzG,EAAIM,OAASmG,OAAOP,IAAMO,OAAOzG,EAAIK,KAAOoG,OAAOP,GAE5D,OADAI,EAAKa,cAAcjB,EAAGd,EAAOE,OACtBgB,EAAKL,qBAAqBjG,EAAIH,KAAMuF,EAAOE,YARlD,GAAiB,SAAbtF,EAAIM,MAA8B,SAAXN,EAAIK,GAC7B,OAAOL,EAAIH,KAYnB,OAAU,MAANqG,EACK,KAGTI,EAAKa,cAAcjB,EAAGd,EAAOE,OACtBgB,EAAKL,qBAAqBC,EAAGd,EAAOE,SAI/C,GAA0B,WAAtBF,EAAOE,MAAMjE,KAAmB,CAClC,IAAMgG,KAAiB7C,EAAA8C,gBAAelC,EAAOmC,MAAQnC,EAAOE,MAAMiC,MAElE,OAAO,SAAArB,GAEL,OADAd,EAAOE,MAAMwB,SAAWZ,EACd,MAANA,EACK,IAGLtF,EAAAjD,QAAE4I,SAASL,IAAMtF,EAAAjD,QAAEwI,QAAQD,GACtBI,EAAKL,qBAAqBC,EAAGd,EAAOE,QAG7CgB,EAAKa,cAAcjB,EAAGd,EAAOE,OACtB+B,EAAenB,EAAGd,EAAOE,MAAMkC,SAAU,QAIpD,OAAO,SAAAtK,GAEL,OADAkI,EAAOE,MAAMwB,SAAW5J,EACjBoJ,EAAKL,qBAAqB/I,EAAOkI,EAAOE,SAInDb,EAAA3G,UAAAqJ,cAAA,SAAcjK,EAAOoI,GACnB,GAAKA,EAAMmC,WAANnC,MAIDpI,IAAsC0D,EAAAjD,QAAEwI,QAAQjJ,GAApD,CAIA,IAAMwK,EAAejB,OAAOvJ,GACxBsJ,MAAMkB,KAIV5C,KAAKI,WAAWI,EAAMmC,WAAa3C,KAAKe,iBAAiB6B,EAAcpC,MAGzEb,EAAA3G,UAAA6J,mBAAA,SAAmBlH,GAIjB,IAHA,IAAMmH,KAEAnJ,EAAMqG,KAAKnC,MAAMtD,KAAKoB,GACnBxE,EAAI,EAAGA,EAAIwC,EAAII,OAAQ5C,IAE9B2L,EADe,UAAU3L,IACIiB,MAAOuB,EAAIxC,IAE1C,OAAO2L,GAGTnD,EAAA3G,UAAA+J,kBAAA,SAAkB1C,EAAUjI,GAC1B,OAAO4H,KAAKG,WAAWE,GAAYL,KAAKG,WAAWE,GAAUjI,GAASA,GAGxEuH,EAAA3G,UAAAgK,WAAA,SAAWlJ,EAAa6B,EAAUvD,EAAO6K,sBACvC7K,EAAQ4H,KAAK+C,kBAAkBjJ,EAAa1B,GAE5C,IAAMkI,EAASN,KAAKnC,MAAMnE,QAAQI,GAC9BoJ,EAAY,GACZC,EAAY,GACVC,KACFC,EAAY,GAEZrD,KAAKI,WAAWkD,MAClBJ,EAAY,4BAA8BlD,KAAKI,WAAWkD,KAAO,IACjEF,EAAYpI,KAAK,0BACjBgF,KAAKI,WAAWkD,KAAO,MACdtD,KAAKI,WAAWhI,QACzB+K,EAAY,iBAAmBnD,KAAKI,WAAWhI,MAAQ,IACvD4H,KAAKI,WAAWhI,MAAQ,MAK1B,IAAImL,EAAa,GAYjB,GAXIN,IACFM,EAAa,uCAAyCvD,KAAKnC,MAAMnE,QAAQI,GAAa6D,MAAQ,mBAG5FvF,GACF8K,EAAY,yBACZ5C,EAAOkD,WAEPlD,EAAOkD,WAAS,IAGdlD,EAAOkD,OACT,MAAO,GAOT,GAJIlD,EAAOE,OAASF,EAAOE,MAAMiD,gBAC/BL,EAAYpI,KAAK,wBAGfsF,EAAOE,OAASF,EAAOE,MAAMkD,KAAM,CAErC,IAAMZ,EAAa9C,KAAK6C,mBAAmBlH,GAC3CmH,EAAUa,OAAA,CAAevL,MAAOA,GAEhC,IAAMwL,EAAW5D,KAAKF,YAAYe,QAAQP,EAAOE,MAAMqD,QAASf,EAAYgB,oBACtEC,EAAkB/D,KAAKF,YAAYe,QAAQP,EAAOE,MAAMwD,YAAalB,GACrEmB,EAAa3D,EAAOE,MAAM0D,gBAAkB,SAAW,GAE7Dd,EAAYpI,KAAK,yBAEjBuI,GAAc,sBACDK,EAAQ,aAAaK,EAAU,4CAA4CF,EAAe,2BAA2BZ,EAAS,gBACrI/K,EAAK,8BAIXmL,GAAcnL,EAoBhB,GAjBIkI,EAAOtB,aACToE,EAAYpI,KAAK,+BACjBuI,GAAc,uJAEG5H,EAAQ,kBAAkB7B,EAAW,wOAIrC6B,EAAQ,kBAAkB7B,EAAW,mFAKpDsJ,EAAYrJ,SACdsJ,EAAY,WAAaD,EAAY9B,KAAK,KAAO,KAG/ChB,EAAOE,OAA+B,UAAtBF,EAAOE,MAAMjE,KAAkB,CACjD,IAAM4H,EAAMxC,OAAOrB,EAAOE,MAAMwB,UAC1BoC,EAAOD,EAAM,EAAI,KAAOA,EAAM,EAAI,cAClCjD,EAASZ,EAAOE,MAAMU,OACtBmD,EAAiB,OAATD,EAAgBlD,EAAOA,EAAOnH,OAAS,GAAc,SAATqK,EAAkBlD,EAAO,GAAK,UASxFqC,EAAaa,EAPA,4FACsEC,EAAK,oFAChDD,EAAI,iBAAiBhM,EAAK,gCAAgCA,EAAK,kDACpEA,EAAK,kCAIb,IAc7B,OAPEmL,EAJEjD,EAAOE,OAAkC,gBAAzBF,EAAOE,MAAM8D,QAIlB,qGAF4BlM,EAAK,+DADxCiM,EAAQrE,KAAKe,iBAAiBY,OAAOrB,EAAOE,MAAMwB,UAAW1B,EAAOE,QAKjD,KAAKpI,EAAK,sBAGtB,MAAQiL,EAAYH,EAAYC,EAAY,IAAMI,EAAa,SAKhF5D,EAAA3G,UAAAuL,OAAA,SAAOC,GAQL,IAPA,IAAMC,EAAWzE,KAAK1D,MAAMmI,UAAY,IAClCC,EAAWF,EAAOC,EAClBE,EAASpG,KAAKC,IAAIkG,EAAWD,EAAUzE,KAAKnC,MAAMtD,KAAKR,QACzD6K,EAAO,GACLC,KACFC,EAAW,GAENtI,EAAIkI,EAAUlI,EAAImI,EAAQnI,IAAK,CAItC,IAHA,IAAM7C,EAAMqG,KAAKnC,MAAMtD,KAAKiC,GACxBuI,EAAW,GACXC,EAAW,GACN7N,EAAI,EAAGA,EAAI6I,KAAKnC,MAAMnE,QAAQK,OAAQ5C,IAC7C4N,GAAY/E,KAAKgD,WAAW7L,EAAGqF,EAAG7C,EAAIxC,GAAIqF,IAAMkI,GAG9C1E,KAAKI,WAAWzG,MAClBqL,EAAW,4BAA8BhF,KAAKI,WAAWzG,IAAM,IAC/DkL,EAAW7J,KAAK,yBAChBgF,KAAKI,WAAWzG,IAAM,MAGpBkL,EAAW9K,SACb+K,EAAW,WAAaD,EAAWvD,KAAK,KAAO,KAGjDsD,GAAQ,OAASE,EAAWE,EAAW,IAAMD,EAAW,QAG1D,OAAOH,GAGTjF,EAAA3G,UAAAiM,cAAA,WAGE,IAFA,IAAM1K,KAEGiC,EAAI,EAAGA,EAAIwD,KAAKnC,MAAMtD,KAAKR,OAAQyC,IAAK,CAG/C,IAFA,IAAM7C,EAAMqG,KAAKnC,MAAMtD,KAAKiC,GACtB0I,KACG/N,EAAI,EAAGA,EAAI6I,KAAKnC,MAAMnE,QAAQK,OAAQ5C,IAC7C+N,EAAOlK,KAAKgF,KAAK+C,kBAAkB5L,EAAGwC,EAAIxC,KAE5CoD,EAAKS,KAAKkK,GAEZ,OACExL,QAASsG,KAAKnC,MAAMnE,QACpBa,KAAMA,IAGZoF,EAzXA,GAAAvG,EAAAuG,cAAAxI,GAAA,SAAAkB,EAAAe,GCLAlC,EAAAD,QAAAkO,iBCAAjO,EAAAD,QAAAmO,mHCuFgBC,4BAAAC,0FApFhBD,EAUE,WACwC,SAAAA,EAAAE,EAAAC,EAAAC,GACtCzF,KAAAwF,GAAOA,EACPxF,KAAKyF,aAAYA,EACjBF,EAAKG,OAAQ1F,KACbA,KAAK2F,UAALJ,EAAoBK,KACpB5F,KAAK1D,MAAA0D,KAAa2F,UAAOrJ,MACzB0D,KAAKxG,aAAAqM,EAAmBrM,aACxBwG,KAAK8F,WAAA,MAAL,6EACD9F,KAAA+F,iBAAAN,EAAAO,mDAR2BX,EAAAY,SAAA,8BAY1BZ,EAAKrM,UAALkN,qBAAA,WAGkC,OAAAlG,KAAAmG,eAAA,EADlCnG,KAAAoG,mBAAmB,GACepG,KAAA1D,MAAAF,WAC9B,8BAIA,WAED4D,KAAAmG,iBAAA,MAEC,YAVJnG,KAAAoG,mBAAA,6DAAA/N,EAAAW,UAAAqN,iBAAA,WAgBA,IAAI7E,EAAMxB,KAET,IAAAA,KAAA2F,UAAAW,gCAED,IAAM5M,EAAQsG,KAAGxG,aAAEwG,KAAI1D,MAANF,WAAeD,WAAO6D,KAAA2F,UAAAW,SAAoCC,EAA/BzK,EAAAjD,QAAAqC,IAAAxB,EAAA,SAAAlC,GAA6B,OAA7BgK,EAAAiE,aAAAe,YAA5CpO,MAAAZ,EAAAuD,kEAMA,IAAMrB,EAASmM,EAAArM,aAAOwG,KAAS1D,MAAAF,WAAAD,WAAA6D,KAAA2F,UAAAW,SAA/BhG,EAAAxE,EAAAjD,QAAA4N,KAAA/M,sCAIE4G,IACDN,KAAA1D,MAAA5C,QAAAsB,KAAAsF,kBAID,IAAAoG,EAAK1G,KAAiByF,aAAQO,gBAXhChG,KAAA+F,iBAAAnB,KAAA8B,EAAA9B,kFAgBE5E,KAAI1D,MAAK5C,WACiB,4BAAEsG,KAAI1D,MAANF,WAAe4D,KAAA1D,MAAO5C,QAAAsB,MAA9CD,KAAA,MACD3C,MAAA,QAJH4H,KAAAkG,sCAYCb,EAFDrM,UAAAuL,OAAA,WAAAvE,KAAA2F,UAAApB,UAMEc,EAAerM,UAAf2N,aAAA,SAAArG,GAFFN,KAAA1D,MAAA5C,QAAAoC,EAAAjD,QAAA+N,QAAA5G,KAAA1D,MAAA5C,QAAA4G,8BAnEA,YAAA1I,EAAAS,EAAAe,GA8EE,OACAyN,SAAA,IACAC,SAJFC,YAAA,mDAAAC,WAAA5P,GAAAgC,EAAAiM,qBAAAjO,GAAA,SAAAiB,EAAAe,EAAAR,GAAA,aAAAhB,EAAAqO,QAAA,sBAAApO,OAAAC,eAAAsB,EAAA,cAAAhB,OAAA,ICzFFnB,EAAAgQ,yBAAA3B,2BAGA,SAAA4B,GAAA,OAAAA,KAAA3O,WAAA2O,GAAArO,QAAAqO,GAAA,CAAAA,aAcED,EACA,WAGE,SAAKA,EAAL1B,GACA,IAAA/D,EAAKxB,KAELuF,EAAKG,OAAL1F,KACAA,KAAKmH,iBACH,EAAEnH,KAAA2F,UAAMJ,EAARK,KAAoB5F,KAAA1D,MAAO0D,KAAA2F,UAAArJ,MAA3B0D,KACAoH,eAAA1H,EAAA2H,mBAAErH,KAAAsH,aAAcvM,KAAK,WAFL3C,MAGhB,OAAiB2C,KAAK,OAHN3C,MAIhB,SAAe2C,KAAK,QAJtB3C,MAAA,UAOI2C,KAAM,MAAU3C,MAAO,QACvB4H,KAAAuH,cAAexM,KAAK,SAFL3C,MAGjB,WAAkB2C,KAAK,QAHN3C,MAIjB,UAAgB2C,KAAK,SAJJ3C,MAKjB,WAAkB2C,KAAK,OALzB3C,MAAA,SAQA2C,KAAK,SACD3C,MAAM,WAAR4H,KACA8F,WAAA,mFAAE9F,KAAAwH,cAAiCzM,KAAK,sBAFvB3C,MAGjB,wBAA8B2C,KAAK,0BAHlB3C,MAIjB,4BAA2B2C,KAAK,qBAJf3C,MAKjB,uBAAsB2C,KAAK,kBAL7B3C,MAAA,oBAOuB2C,KAAM,aAAiB3C,MAAO,eAAO4H,KAAAyH,eAAuB1M,KAAK,gBAAxF3C,MAAA,IAEA2C,KAAK,gBACH3C,MAAK,IAAA4H,KAAA0H,eAAA,WAGL,OAAAlG,EAAOmE,UAAA9H,0DAKT,OAAK/C,EAAAC,WAILiF,KAAK2H,cAAL3H,KAAA2H,cAAAhP,KAAAqH,MAuFJ,OAjIIiH,EAAgBhB,SAAhB,UA6CFgB,EAAAjO,UAAAuL,OAAA,WACEvE,KAAA2F,UAAcpB,UAEZ0C,EAAAjO,UAAA4O,cAAA,SAAAtH,EAAAuH,GACDvH,EAAAmC,KAAAoF,EAAAzP,MACD,gBAAAyP,EAAKzP,QALPkI,EAAAgE,QAAA,OASEtE,KAAM2F,UAAApB,UAGJ0C,EAHmBjO,UAAA8O,eAAA,WAInB,IAcEvH,EAAAP,KAAc1D,MAAGiE,OACnBwH,EAAaxH,EAAOxG,WAElBgO,EAAa,YACdxH,EAAAwH,EAAA,GAAAnH,UAGHoH,EAAcD,EAAkB,GAIlCxH,EAAA0H,OAAAD,EAAA,GAxBIvF,KAAM,QACNlG,KAAA,SACAc,MAAO,GACPqF,SAAU,EACVxB,QAAA,yBATmB,sDAUnByB,UAAW,KAVb/B,QAAA,GAaAsB,WAAe,sBACflB,cACAmB,YAAI,IAeJnC,KAAKmH,iBAAea,GAGtBf,EAAAjO,UAAAkP,kBAAA,SAAiB1H,GACfR,KAAM1D,MAAMiE,OAAAzE,EAAkBjD,QAAO+N,QAArC5G,KAAA1D,MAAAiE,OAAAC,IAGAyG,EAAAjO,UAAAmP,iBAAA,SAAAC,GACA,IAAAC,EAAKrI,KAAU1D,MAAfiE,OAAA6H,GAAAlH,OALFoH,EAAAD,EAAA,GAAAjP,EAAA,GAAAA,EAAA,GAQAiP,EAAA,GAAAC,EAAAtI,KAAA2F,UAAApB,UAEI0C,EAAWjO,UAAO2O,cAAmB,SAArCY,EAAAC,cAED,OAHD,SAAAC,GADFjH,EAAAlF,MAAAiE,OAAAgI,GAAArH,OAAAsH,GAAAC,EAOAjH,EAAA+C,+CAIO/D,EAAC4B,YAAiB5B,EAAK4B,cAC5B5B,EAAK4B,UAAUpH,MALjB5C,MAAA,GAAA2C,KAAA,KASEiF,KAAK2F,UAALpB,mDAIF/D,EAAA4B,UAAA6F,OAAAG,EAAA,GACEpI,KAAK2F,UAAMpB,8CAGN/D,EAAC8B,YAAiB9B,EAAM8B,cAAR9B,EAArB8B,UAAAtH,MACAQ,KAAK,GALPD,GAAA,GAAAR,KAAA,KASEiF,KAAK2F,UAALpB,mDAGJ/D,EAAA8B,UAAA2F,OAAAG,EAAA,GA/IApI,KAAA2F,UAAApB,UAiJA0C,EAlIE,GAsIE,SAAAyB,EADKlD,EAAAC,GAIL,OAJFoB,SAAA,IAAAC,OAAA,EAAAC,YAAA,2DAAAC,WAAA5P,GADAH,EAAAgQ,wFCtJF7O,WAAAgB,EAAAuP,UAAAvP,EAAAwP,oBAAA,EACA,IAAA3Q,EAAAT,EAAAT,EAAA,IAEA8R,EAAAC,EADA/R,EAAA,KAAAK,EAAAwB,EAAA,IAGAmQ,EAAAD,EADA/R,EAAA,KAEA8O,EAAA9O,EAAA,GACAiS,EAAAjS,EAAA,GAAAkS,EAAArQ,EAAA,IAAAM,EAAAN,EAAA,YAAApB,EAAAa,GAAA,OAAAA,KAAAE,WAAAF,EAAA,CAAAQ,QAAAR,GAAA,IAAAZ,EAAA,eAAAY,EAAA,SAAAe,EAAAR,GAAA,OAAAP,EAAAR,OAAAqR,gBAAA,CAAAC,UAAA,cAAAC,OAAA,SAAA/Q,EAAAe,GAAAf,EAAA8Q,UAAA/P,IAAA,SAAAf,EAAAe,GAAA,QAAAR,KAAAQ,IAAAH,eAAAL,KAAAP,EAAAO,GAAAQ,EAAAR,MAAAQ,EAAAR,IAAA,gBAAAQ,EAAAR,GAAA,SAAAX,IAAA+H,KAAAqJ,YAAAjQ,EAAAf,EAAAe,EAAAR,GAEAnB,EAAAuB,UAAA,OAAAsQ,EAAAzR,OAAAY,OAAA6Q,IAAAC,EAAAvQ,UAAAsQ,EAAAtQ,UAAA,IAAAuQ,IAFA,GAuCEX,cAC+F,SAAAA,EAAArD,EAAAiE,EAAA1J,EAAA2J,EAAAC,EAAAC,GA9B/F,IAAAnI,EAAAoI,EAAAtS,KAAgB0I,KAAAuF,EAAAiE,IAAAxJ,KAqDd,OAnDAwB,EAAAiI,eAAWA,EACXjI,EAAAkI,UAHcA,EAIdlI,EAAAmI,YAJcA,EAKdnI,EAAAqI,eAEIC,aACA1N,UAAS,wBACTqI,SAAO,KACPsF,cAJFxJ,SAOEhE,KAAM,OACNqE,QAAM,OACNvD,MAAO,OACP6E,WAJF,wBAMEO,KAAA,QACAlG,KAAA,SACAc,MAAA,GApBUqF,SAAA,EAuBdxB,QAvBc,+EAwBdyB,UAxBc,KAyBd/B,QAAU,OACVI,gBAAgBtH,WAAVsQ,UA1BRC,SAAA,OAiCEC,YAEIC,UAGF3I,EAAA4I,UAAY,WAEb5I,EAAAlF,MAAAiE,wCAEDiB,EAAAlF,MAAA5C,QAAE8H,EAASlF,MAAK+N,qCAEX7I,EAALlF,MAAe+N,qNAKhB7I,EAAA8I,OAAAC,GAAA,iBAAA/I,EAAAgJ,eAAA7R,KAAA6I,IAEDA,EAAA8I,OAAAC,GAAA,qBAAA/I,EAAAiJ,mBAAA9R,KAAA6I,IAEOA,EA0MP,OAjOAkJ,EAAA9B,EAAYgB,GAAgEhB,EAAA3C,SAAA,+EA0B5E2C,EAAA5P,UAAAwR,eAAA,WACExK,KAAA2K,aAAa,UAAA3B,EAAA4B,iBAAA,GAAE5K,KAAA2K,aAAM,gBAARE,EAAAnC,iBAAA,IACdE,EAFD5P,UAAAyR,mBAAA,SAAAK,WAIA/P,KAAA,aACEgQ,MAAK,sBAKCnC,EAAS5P,UAAOgS,aADF,SAAAC,GAAA,OAEdjL,KAAAoK,UAAY,EAGR,gBANDpK,KAAA1D,MAMCF,UACJ4D,KAAOyJ,eAAAyB,gBAAEC,UAAMnL,KAAAmL,UAAR7O,MAAP0D,KAAA1D,MAPJ8O,MAAApL,KAAAoL,QASDC,KAAA,SAAA5N,UAEDpB,KAAOoB,KAKFmM,EAAL5Q,UAAAgS,aAAA1T,KAAA0I,KAAAiL,IAGFrC,EAAA5P,UAAAsS,YAAA,SAAAC,GACEvL,KAAKsG,WACLtG,KAAKuE,UAIHqE,EAAS5P,UAAWwS,eAAkB,SAAAC,GACpCzL,KAAAsG,QAAWmF,EACZzL,KAFDoK,UAEO,EAEHpK,KAAAsG,SAAWtG,KAAAsG,QAAYvM,SAClB,UAFPiG,KAEOsG,QAAA,GAAA/J,KACLyD,KAAA1D,MAASF,UAAM,QAEd,SAAA4D,KAAAsG,QAAA,GAAA/J,KACFyD,KAAA1D,MAAAF,UAAA,OAEJ,UAAA4D,KAAA1D,MAAAF,WAAA,SAAA4D,KAAA1D,MAAAF,wDAOD4D,KAAKuE,UAYNqE,EAdD5P,UAAAuL,OAAA,WAkBE,OAAAvE,KAAAnC,OAAA,EAAA1E,EAAAiG,sBAAAY,KAAAsG,QAAAtG,KAAA1D,OAFF0D,KAAAnC,MAAAqM,KAAAlK,KAAA1D,MAAA4N,MACElK,KAAA0L,SAAA,IAAAC,EAAAhM,cAAAK,KAAA1D,MAAA0D,KAAAnC,MAAAmC,KAAAmL,UAAAS,gBAAA5L,KAAA0J,UAAA1J,KAAAF,YAAAiJ,EAAAlQ,QAAAkH,MAAAxD,MACIqN,EAAA5Q,UAAmBuL,OAAKjN,KAAM0I,KAA9BA,KAAyCnC,mDAK3CmC,KAAInC,MAAKnE,QAAWsG,KAAM1D,MAAA4N,KAAApP,OACxBkF,KAAAnC,MAAKnE,QAAWsG,KAAhB1D,MAAA4N,KAAApP,KAAAoP,SAGDlK,KAAA1D,MAAA4N,KAAApP,MAAAuF,EALHL,KAMO1D,MAAA4N,KAAAC,KACLnK,KAAK1D,MAAM4N,KAAKC,QAEjBnK,KAAA1D,MAAA4N,KAAApP,IAAA,MAfHkF,KAAA1D,MAAA4N,KAAApP,IAAAuF,2BAqBEL,KAAKuE,UAGHqE,EAAA5P,UAAc6S,UAAA,WACd,IAAA/E,EAAK9G,KAF4BuF,OAAAuG,SAGjChF,EAAAiF,UAAY/L,KAAA0L,SAAAzG,gBAHqB6B,EAAnCxK,MAAA,QAJF0D,KAAAgM,gBAAA,cAAAC,aAAA,yEAWAnF,QACEoF,WAAA,mBAIAtD,EAAS5P,UAAT0K,KAAuB,SAAAoD,EAAAqF,EAAAC,EAAAxG,GACrB,IAAAvJ,YAEAgQ,EAAa,EAkDb,SAAKC,IAAM,IAAAC,EAAaJ,EAAMK,QAAA,kBAA9BC,EAAAN,EAAA1F,KAAA,uBACAiG,EAAUP,EAAS1F,KAAA,SAEnBkG,EAAgBR,EAAA1F,KAAhB,uBACA0F,EAAAS,KAEAC,YAAavQ,EAAA2N,WAAAsC,EAAbO,SAAA,gCAAAzU,GA3CFuN,EAAA8F,SAASxL,SAAY7D,GACnBqQ,EAAWK,QACXL,EAAK9H,KAALgB,EAAiB8F,SAAYnH,OAAJqB,EAARwE,YAyCjB,CAGFsC,GAnCE,SAAqBC,GACnBA,EAAAI,QACD,IAAAtI,EAAAnI,EAAAmI,UAAA,IAGD,GAAoB,KAAAtL,EAAAoF,KAAAyO,KAAA5V,EAAAmD,KAAAR,OAAAX,IAApB,KAKE,IAAA6T,EAAM1O,KAAe2O,IAAAtH,EAASwE,UAAV,EAAuB,GAC3C+C,EAAM5O,KAAYC,IAAG6N,EAAAY,EACnB,GAEFG,KAAsBvE,EAAAhQ,SAAtB,aAAAK,EAAAN,EAAAM,EAAA/B,EAAA+B,IAAA,CAGF,IAAAmU,EAAkBlW,IAAAyO,EAAAwE,UAAlB,YACDkD,KAAAzE,EAAAhQ,SAAA,+CAAAwU,EAAA,MAAAlW,EAAA,gBAAA8R,EAAAsE,OAAA9V,GAICkV,EAAMY,OAAWH,IAtBjB,CAsBiBA,UAcfI,aAASlR,EAAA0N,OA1DV,eAAA3R,EAAAJ,EAAAwV,OAOD,OAJDpB,EAAA,IAAAhU,GAAA,IAICqV,EAAA,QAPC,GA0DU,KAKXvB,EAAAwB,SACAC,SAAM,wBAgBNzB,EAAA5B,GAAA,QAAa,kCAAAlS,GA/Df,IAAAwV,KAAShF,EAAAhQ,SAATO,EAAkC0U,eAChClI,EAAAwE,UAAAxI,SAAAiM,EAAA9S,OAAA,MAEAuR,MA6DDH,EAJD5B,GAAA,mCAVI,SAAiBnR,GACjB,IAAA2U,KAAUlF,EAAWhQ,SAAAO,EAAA0U,eAAAzR,OAJvB2R,GAOA/C,WAAK3O,EAAY2O,WAClBvS,IAAA2D,EAAA3C,QAAAqU,EAAAzN,QAAAvF,mCAEGkT,SAAIF,EAASE,UAGjBrI,EAAM+D,YAAauE,eAAaF,KAMhC,IAAIG,EAAWrH,EAAUsH,IAAA,sBACvBjC,EAAIkC,IAAG,QAAU,0BAAAjV,EAAAiV,IAAA,oCACjBF,MAECvI,EAAA0E,OAAAC,GAAA,kBAAA+D,aAjGLhC,IAqGF1G,EAAA2I,wBAEE3F,EAAM7B,YAAA,cACC6B,EAlOPA,CAgOF4F,EAAAC,uBAI2CC","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import _ from 'lodash';\nimport flatten from 'grafana/app/core/utils/flatten';\nimport TimeSeries from 'grafana/app/core/time_series2';\nimport TableModel from 'grafana/app/core/table_model';\n\nconst transformers = {};\n\n// Returns true if both rows have matching non-empty fields as well as matching\n// indexes where one field is empty and the other is not\nfunction areRowsMatching(columns, row, otherRow) {\n  let foundFieldToMatch = false;\n  for (let columnIndex = 0; columnIndex < columns.length; columnIndex++) {\n    if (row[columnIndex] !== undefined && otherRow[columnIndex] !== undefined) {\n      if (row[columnIndex] !== otherRow[columnIndex]) {\n        return false;\n      }\n    } else if (row[columnIndex] === undefined || otherRow[columnIndex] === undefined) {\n      foundFieldToMatch = true;\n    }\n  }\n  return foundFieldToMatch;\n}\n\nexport function mergeTablesIntoModel(dst?: TableModel, ...tables: TableModel[]): TableModel {\n  const model = dst || new TableModel();\n\n  if (arguments.length === 1) {\n    return model;\n  }\n  // Single query returns data columns and rows as is\n  if (arguments.length === 2) {\n    model.columns = tables[0].hasOwnProperty('columns') ? [...tables[0].columns] : [];\n    model.rows = tables[0].hasOwnProperty('rows') ? [...tables[0].rows] : [];\n    return model;\n  }\n\n  // Track column indexes of union: name -> index\n  const columnNames = {};\n\n  // Union of all non-value columns\n  const columnsUnion = tables.slice().reduce((acc, series) => {\n    series.columns.forEach((col: any) => {\n      const { text } = col;\n      if (columnNames[text] === undefined) {\n        columnNames[text] = acc.length;\n        acc.push(col);\n      }\n    });\n    return acc;\n  }, [] as any[]);\n\n  // Map old column index to union index per series, e.g.,\n  // given columnNames {A: 0, B: 1} and\n  // data [{columns: [{ text: 'A' }]}, {columns: [{ text: 'B' }]}] => [[0], [1]]\n  const columnIndexMapper = tables.map(series => series.columns.map(col => columnNames[col.text]));\n\n  // Flatten rows of all series and adjust new column indexes\n  const flattenedRows = tables.reduce((acc, series, seriesIndex) => {\n    const mapper = columnIndexMapper[seriesIndex];\n    series.rows.forEach(row => {\n      const alteredRow: any[] = [];\n      // Shifting entries according to index mapper\n      mapper.forEach((to, from) => {\n        alteredRow[to] = row[from];\n      });\n      acc.push(alteredRow);\n    });\n    return acc;\n  }, [] as any[]);\n\n  // Merge rows that have same values for columns\n  const mergedRows = {};\n  const compactedRows = flattenedRows.reduce((acc, row, rowIndex) => {\n    if (!mergedRows[rowIndex]) {\n      // Look from current row onwards\n      let offset = rowIndex + 1;\n      // More than one row can be merged into current row\n      while (offset < flattenedRows.length) {\n        // Find next row that could be merged\n        const match = _.findIndex(flattenedRows, otherRow => areRowsMatching(columnsUnion, row, otherRow), offset);\n        if (match > -1) {\n          const matchedRow = flattenedRows[match];\n          // Merge values from match into current row if there is a gap in the current row\n          for (let columnIndex = 0; columnIndex < columnsUnion.length; columnIndex++) {\n            if (row[columnIndex] === undefined && matchedRow[columnIndex] !== undefined) {\n              row[columnIndex] = matchedRow[columnIndex];\n            }\n          }\n          // Don't visit this row again\n          mergedRows[match] = matchedRow;\n          // Keep looking for more rows to merge\n          offset = match + 1;\n        } else {\n          // No match found, stop looking\n          break;\n        }\n      }\n      acc.push(row);\n    }\n    return acc;\n  }, []);\n\n  model.columns = columnsUnion;\n  model.rows = compactedRows;\n  return model;\n}\n\ntransformers['timeseries_to_rows'] = {\n  description: 'Time series to rows',\n  getColumns: () => {\n    return [];\n  },\n  transform: (data, panel, model) => {\n    model.columns = [{ text: 'Time', type: 'date' }, { text: 'Metric' }, { text: 'Value' }];\n\n    for (let i = 0; i < data.length; i++) {\n      const series = data[i];\n      for (let y = 0; y < series.datapoints.length; y++) {\n        const dp = series.datapoints[y];\n        model.rows.push([dp[1], series.target, dp[0]]);\n      }\n    }\n  },\n};\n\ntransformers['timeseries_to_columns'] = {\n  description: 'Time series to columns',\n  getColumns: () => {\n    return [];\n  },\n  transform: (data, panel, model) => {\n    model.columns.push({ text: 'Time', type: 'date' });\n\n    // group by time\n    const points = {};\n\n    for (let i = 0; i < data.length; i++) {\n      const series = data[i];\n      model.columns.push({ text: series.target });\n\n      for (let y = 0; y < series.datapoints.length; y++) {\n        const dp = series.datapoints[y];\n        const timeKey = dp[1].toString();\n\n        if (!points[timeKey]) {\n          points[timeKey] = { time: dp[1] };\n          points[timeKey][i] = dp[0];\n        } else {\n          points[timeKey][i] = dp[0];\n        }\n      }\n    }\n\n    for (const time in points) {\n      const point = points[time];\n      const values = [point.time];\n\n      for (let i = 0; i < data.length; i++) {\n        const value = point[i];\n        values.push(value);\n      }\n\n      model.rows.push(values);\n    }\n  },\n};\n\ntransformers['timeseries_aggregations'] = {\n  description: 'Time series aggregations',\n  getColumns: () => {\n    return [\n      { text: 'Avg', value: 'avg' },\n      { text: 'Min', value: 'min' },\n      { text: 'Max', value: 'max' },\n      { text: 'Total', value: 'total' },\n      { text: 'Current', value: 'current' },\n      { text: 'Count', value: 'count' },\n    ];\n  },\n  transform: (data, panel, model) => {\n    let i, y;\n    model.columns.push({ text: 'Metric' });\n\n    for (i = 0; i < panel.columns.length; i++) {\n      model.columns.push({ text: panel.columns[i].text });\n    }\n\n    for (i = 0; i < data.length; i++) {\n      const series = new TimeSeries({\n        datapoints: data[i].datapoints,\n        alias: data[i].target,\n      });\n\n      series.getFlotPairs('connected');\n      const cells = [series.alias];\n\n      for (y = 0; y < panel.columns.length; y++) {\n        cells.push(series.stats[panel.columns[y].value]);\n      }\n\n      model.rows.push(cells);\n    }\n  },\n};\n\ntransformers['annotations'] = {\n  description: 'Annotations',\n  getColumns: () => {\n    return [];\n  },\n  transform: (data, panel, model) => {\n    model.columns.push({ text: 'Time', type: 'date' });\n    model.columns.push({ text: 'Title' });\n    model.columns.push({ text: 'Text' });\n    model.columns.push({ text: 'Tags' });\n\n    if (!data || !data.annotations || data.annotations.length === 0) {\n      return;\n    }\n\n    for (let i = 0; i < data.annotations.length; i++) {\n      const evt = data.annotations[i];\n      model.rows.push([evt.time, evt.title, evt.text, evt.tags]);\n    }\n  },\n};\n\ntransformers['table'] = {\n  description: 'Table',\n  getColumns: data => {\n    if (!data || data.length === 0) {\n      return [];\n    }\n\n    // Single query returns data columns as is\n    if (data.length === 1) {\n      return [...data[0].columns];\n    }\n\n    // Track column indexes: name -> index\n    const columnNames = {};\n\n    // Union of all columns\n    const columns = data.reduce((acc, series) => {\n      series.columns.forEach(col => {\n        const { text } = col;\n        if (columnNames[text] === undefined) {\n          columnNames[text] = acc.length;\n          acc.push(col);\n        }\n      });\n      return acc;\n    }, []);\n\n    return columns;\n  },\n  transform: (data, panel, model) => {\n    if (!data || data.length === 0) {\n      return;\n    }\n\n    const noTableIndex = _.findIndex(data, (d: any) => d.type !== 'table');\n    if (noTableIndex > -1) {\n      throw {\n        message: `Result of query #${String.fromCharCode(\n          65 + noTableIndex\n        )} is not in table format, try using another transform.`,\n      };\n    }\n\n    mergeTablesIntoModel(model, ...data);\n  },\n};\n\ntransformers['json'] = {\n  description: 'JSON Data',\n  getColumns: data => {\n    if (!data || data.length === 0) {\n      return [];\n    }\n\n    const names: any = {};\n    for (let i = 0; i < data.length; i++) {\n      const series = data[i];\n      if (series.type !== 'docs') {\n        continue;\n      }\n\n      // only look at 100 docs\n      const maxDocs = Math.min(series.datapoints.length, 100);\n      for (let y = 0; y < maxDocs; y++) {\n        const doc = series.datapoints[y];\n        const flattened = flatten(doc, null);\n        for (const propName in flattened) {\n          names[propName] = true;\n        }\n      }\n    }\n\n    return _.map(names, (value, key) => {\n      return { text: key, value: key };\n    });\n  },\n  transform: (data, panel, model) => {\n    let i, y, z;\n\n    for (const column of panel.columns) {\n      const tableCol: any = { text: column.text };\n\n      // if filterable data then set columns to filterable\n      if (data.length > 0 && data[0].filterable) {\n        tableCol.filterable = true;\n      }\n\n      model.columns.push(tableCol);\n    }\n\n    if (model.columns.length === 0) {\n      model.columns.push({ text: 'JSON' });\n    }\n\n    for (i = 0; i < data.length; i++) {\n      const series = data[i];\n\n      for (y = 0; y < series.datapoints.length; y++) {\n        const dp = series.datapoints[y];\n        const values: any[] = [];\n\n        if (_.isObject(dp) && panel.columns.length > 0) {\n          const flattened = flatten(dp, null);\n          for (z = 0; z < panel.columns.length; z++) {\n            values.push(flattened[panel.columns[z].value]);\n          }\n        } else {\n          values.push(JSON.stringify(dp));\n        }\n\n        model.rows.push(values);\n      }\n    }\n  },\n};\n\nfunction transformDataToTable(data, panel) {\n  const model = new TableModel();\n\n  if (!data || data.length === 0) {\n    return model;\n  }\n\n  const transformer = transformers[panel.transform];\n  if (!transformer) {\n    throw { message: 'Transformer ' + panel.transform + ' not found' };\n  }\n\n  transformer.transform(data, panel, model);\n  return model;\n}\n\nexport { transformers, transformDataToTable };\n","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","import _ from 'lodash';\nimport moment from 'moment';\nimport kbn from 'grafana/app/core/utils/kbn';\nimport { getValueFormat, getColorFromHexRgbOrName, GrafanaThemeType } from '@grafana/ui';\n\nexport class TableRenderer {\n  formatters: any[];\n  colorState: any;\n\n  constructor(\n    private panel,\n    private table,\n    private isUtc,\n    private sanitize,\n    private templateSrv,\n    private theme?: GrafanaThemeType\n  ) {\n    this.initColumns();\n  }\n\n  setTable(table) {\n    this.table = table;\n\n    this.initColumns();\n  }\n\n  initColumns() {\n    this.formatters = [];\n    this.colorState = {};\n\n    for (let colIndex = 0; colIndex < this.table.columns.length; colIndex++) {\n      const column = this.table.columns[colIndex];\n      column.title = column.text;\n\n      for (let i = 0; i < this.panel.styles.length; i++) {\n        const style = this.panel.styles[i];\n\n        const regex = kbn.stringToJsRegex(style.pattern);\n        if (column.text.match(regex)) {\n          column.style = style;\n\n          if (style.alias) {\n            column.title = column.text.replace(regex, style.alias);\n          }\n\n          break;\n        }\n      }\n\n      this.formatters[colIndex] = this.createColumnFormatter(column);\n    }\n  }\n\n  getColorForValue(value, style) {\n    if (!style.thresholds) {\n      return null;\n    }\n    for (let i = style.thresholds.length; i > 0; i--) {\n      if (value >= style.thresholds[i - 1]) {\n        return getColorFromHexRgbOrName(style.colors[i], this.theme);\n      }\n    }\n    return getColorFromHexRgbOrName(style.colors[0], this.theme);\n  }\n\n  defaultCellFormatter(v, style) {\n    if (v === null || v === void 0 || v === undefined) {\n      return '';\n    }\n\n    if (_.isArray(v)) {\n      v = v.join(', ');\n    }\n\n    if (style && style.sanitize) {\n      return this.sanitize(v);\n    } else {\n      return _.escape(v);\n    }\n  }\n\n  createColumnFormatter(column) {\n    if (!column.style) {\n      return this.defaultCellFormatter;\n    }\n\n    if (column.style.type === 'hidden') {\n      return v => {\n        return undefined;\n      };\n    }\n\n    if (column.style.type === 'date') {\n      return v => {\n        if (v === undefined || v === null) {\n          return '-';\n        }\n\n        if (_.isArray(v)) {\n          v = v[0];\n        }\n\n        // if is an epoch (numeric string and len > 12)\n        if (_.isString(v) && !isNaN(Number(v)) && v.length > 12) {\n          v = parseInt(v, 10);\n        }\n\n        let date = moment(v);\n\n        if (this.isUtc) {\n          date = date.utc();\n        }\n        column.style.rawValue = v;\n        return date.format(column.style.dateFormat);\n      };\n    }\n\n    if (column.style.type === 'string') {\n      return v => {\n        if (_.isArray(v)) {\n          v = v.join(', ');\n        }\n\n        const mappingType = column.style.mappingType || 0;\n\n        if (mappingType === 1 && column.style.valueMaps) {\n          for (let i = 0; i < column.style.valueMaps.length; i++) {\n            const map = column.style.valueMaps[i];\n\n            if (v === null) {\n              if (map.value === 'null') {\n                return map.text;\n              }\n              continue;\n            }\n\n            // Allow both numeric and string values to be mapped\n            if ((!_.isString(v) && Number(map.value) === Number(v)) || map.value === v) {\n              this.setColorState(v, column.style);\n              return this.defaultCellFormatter(map.text, column.style);\n            }\n          }\n        }\n\n        if (mappingType === 2 && column.style.rangeMaps) {\n          for (let i = 0; i < column.style.rangeMaps.length; i++) {\n            const map = column.style.rangeMaps[i];\n\n            if (v === null) {\n              if (map.from === 'null' && map.to === 'null') {\n                return map.text;\n              }\n              continue;\n            }\n\n            if (Number(map.from) <= Number(v) && Number(map.to) >= Number(v)) {\n              this.setColorState(v, column.style);\n              return this.defaultCellFormatter(map.text, column.style);\n            }\n          }\n        }\n\n        if (v === null || v === void 0) {\n          return '-';\n        }\n\n        this.setColorState(v, column.style);\n        return this.defaultCellFormatter(v, column.style);\n      };\n    }\n\n    if (column.style.type === 'number') {\n      const valueFormatter = getValueFormat(column.unit || column.style.unit);\n\n      return v => {\n        column.style.rawValue = v;\n        if (v === null || v === void 0) {\n          return '-';\n        }\n\n        if (_.isString(v) || _.isArray(v)) {\n          return this.defaultCellFormatter(v, column.style);\n        }\n\n        this.setColorState(v, column.style);\n        return valueFormatter(v, column.style.decimals, null);\n      };\n    }\n\n    return value => {\n      column.style.rawValue = value;\n      return this.defaultCellFormatter(value, column.style);\n    };\n  }\n\n  setColorState(value, style) {\n    if (!style.colorMode) {\n      return;\n    }\n\n    if (value === null || value === void 0 || _.isArray(value)) {\n      return;\n    }\n\n    const numericValue = Number(value);\n    if (isNaN(numericValue)) {\n      return;\n    }\n\n    this.colorState[style.colorMode] = this.getColorForValue(numericValue, style);\n  }\n\n  renderRowVariables(rowIndex) {\n    const scopedVars = {};\n    let cellVariable;\n    const row = this.table.rows[rowIndex];\n    for (let i = 0; i < row.length; i++) {\n      cellVariable = `__cell_${i}`;\n      scopedVars[cellVariable] = { value: row[i] };\n    }\n    return scopedVars;\n  }\n\n  formatColumnValue(colIndex, value) {\n    return this.formatters[colIndex] ? this.formatters[colIndex](value) : value;\n  }\n\n  renderCell(columnIndex, rowIndex, value, addWidthHack = false) {\n    value = this.formatColumnValue(columnIndex, value);\n\n    const column = this.table.columns[columnIndex];\n    let cellStyle = '';\n    let textStyle = '';\n    const cellClasses: any[] = [];\n    let cellClass = '';\n\n    if (this.colorState.cell) {\n      cellStyle = ' style=\"background-color:' + this.colorState.cell + '\"';\n      cellClasses.push('table-panel-color-cell');\n      this.colorState.cell = null;\n    } else if (this.colorState.value) {\n      textStyle = ' style=\"color:' + this.colorState.value + '\"';\n      this.colorState.value = null;\n    }\n    // because of the fixed table headers css only solution\n    // there is an issue if header cell is wider the cell\n    // this hack adds header content to cell (not visible)\n    let columnHtml = '';\n    if (addWidthHack) {\n      columnHtml = '<div class=\"table-panel-width-hack\">' + this.table.columns[columnIndex].title + '</div>';\n    }\n\n    if (value === undefined) {\n      cellStyle = ' style=\"display:none;\"';\n      column.hidden = true;\n    } else {\n      column.hidden = false;\n    }\n\n    if (column.hidden === true) {\n      return '';\n    }\n\n    if (column.style && column.style.preserveFormat) {\n      cellClasses.push('table-panel-cell-pre');\n    }\n\n    if (column.style && column.style.link) {\n      // Render cell as link\n      const scopedVars = this.renderRowVariables(rowIndex);\n      scopedVars['__cell'] = { value: value };\n\n      const cellLink = this.templateSrv.replace(column.style.linkUrl, scopedVars, encodeURIComponent);\n      const cellLinkTooltip = this.templateSrv.replace(column.style.linkTooltip, scopedVars);\n      const cellTarget = column.style.linkTargetBlank ? '_blank' : '';\n\n      cellClasses.push('table-panel-cell-link');\n\n      columnHtml += `\n        <a href=\"${cellLink}\" target=\"${cellTarget}\" data-link-tooltip data-original-title=\"${cellLinkTooltip}\" data-placement=\"right\"${textStyle}>\n          ${value}\n        </a>\n      `;\n    } else {\n      columnHtml += value;\n    }\n\n    if (column.filterable) {\n      cellClasses.push('table-panel-cell-filterable');\n      columnHtml += `\n        <a class=\"table-panel-filter-link\" data-link-tooltip data-original-title=\"Filter out value\" data-placement=\"bottom\"\n           data-row=\"${rowIndex}\" data-column=\"${columnIndex}\" data-operator=\"!=\">\n          <i class=\"fa fa-search-minus\"></i>\n        </a>\n        <a class=\"table-panel-filter-link\" data-link-tooltip data-original-title=\"Filter for value\" data-placement=\"bottom\"\n           data-row=\"${rowIndex}\" data-column=\"${columnIndex}\" data-operator=\"=\">\n          <i class=\"fa fa-search-plus\"></i>\n        </a>`;\n    }\n\n    if (cellClasses.length) {\n      cellClass = ' class=\"' + cellClasses.join(' ') + '\"';\n    }\n\n    if (column.style && column.style.type === 'delta') {\n      const num = Number(column.style.rawValue);\n      const icon = num > 0 ? 'up' : num < 0 ? 'down' : undefined;\n      const colors = column.style.colors;\n      const color = icon === 'up' ? colors[colors.length - 1] : icon === 'down' ? colors[0] : '#ffffff';\n\n      const html = `\n        <div class=\"arrow-container\" style=\"display:block;width:25px;height:25px;color:${color};font-size:20px;line-height:25px;\">\n          <i class=\"grafana-tip fa fa-arrow-${icon}\" bs-tooltip=\"${value}\" data-original-title title=\"${value}\"></i>\n          <span class=\"bidder-tooltip\">${value}</span>\n        </div>\n      `;\n\n      columnHtml = icon ? html : '-';\n    }\n\n    if (column.style && column.style.display === 'progressbar') {\n      const color = this.getColorForValue(Number(column.style.rawValue), column.style);\n      const pbarStyle = `display:block;width:${value};max-width:100%;height:100%;padding:5px 0;background-color:${color}`;\n\n      columnHtml = `\n      <td style=\"padding:0;background-color:#212124;\">\n        <div style=\"${pbarStyle}\">${value}</div>\n      </td>`;\n    } else {\n      columnHtml = '<td' + cellClass + cellStyle + textStyle + '>' + columnHtml + '</td>';\n    }\n    return columnHtml;\n  }\n\n  render(page) {\n    const pageSize = this.panel.pageSize || 100;\n    const startPos = page * pageSize;\n    const endPos = Math.min(startPos + pageSize, this.table.rows.length);\n    let html = '';\n    const rowClasses: any[] = [];\n    let rowClass = '';\n\n    for (let y = startPos; y < endPos; y++) {\n      const row = this.table.rows[y];\n      let cellHtml = '';\n      let rowStyle = '';\n      for (let i = 0; i < this.table.columns.length; i++) {\n        cellHtml += this.renderCell(i, y, row[i], y === startPos);\n      }\n\n      if (this.colorState.row) {\n        rowStyle = ' style=\"background-color:' + this.colorState.row + '\"';\n        rowClasses.push('table-panel-color-row');\n        this.colorState.row = null;\n      }\n\n      if (rowClasses.length) {\n        rowClass = ' class=\"' + rowClasses.join(' ') + '\"';\n      }\n\n      html += '<tr ' + rowClass + rowStyle + '>' + cellHtml + '</tr>';\n    }\n\n    return html;\n  }\n\n  render_values() {\n    const rows: any[] = [];\n\n    for (let y = 0; y < this.table.rows.length; y++) {\n      const row = this.table.rows[y];\n      const newRow: any[] = [];\n      for (let i = 0; i < this.table.columns.length; i++) {\n        newRow.push(this.formatColumnValue(i, row[i]));\n      }\n      rows.push(newRow);\n    }\n    return {\n      columns: this.table.columns,\n      rows: rows,\n    };\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8__;","import _ from 'lodash';\nimport { transformers } from './transformers';\n\nexport class TablePanelEditorCtrl {\n  panel: any;\n  panelCtrl: any;\n  transformers: any;\n  fontSizes: any;\n  addColumnSegment: any;\n  getColumnNames: any;\n  canSetColumns: boolean;\n  columnsHelpMessage: string;\n\n  /** @ngInject */\n  constructor($scope, private $q, private uiSegmentSrv) {\n    $scope.editor = this;\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n    this.transformers = transformers;\n    this.fontSizes = ['80%', '90%', '100%', '110%', '120%', '130%', '150%', '160%', '180%', '200%', '220%', '250%'];\n    this.addColumnSegment = uiSegmentSrv.newPlusButton();\n    this.updateTransformHints();\n  }\n\n  updateTransformHints() {\n    this.canSetColumns = false;\n    this.columnsHelpMessage = '';\n\n    switch (this.panel.transform) {\n      case 'timeseries_aggregations': {\n        this.canSetColumns = true;\n        break;\n      }\n      case 'json': {\n        this.canSetColumns = true;\n        break;\n      }\n      case 'table': {\n        this.columnsHelpMessage = 'Columns and their order are determined by the data query';\n      }\n    }\n  }\n\n  getColumnOptions() {\n    if (!this.panelCtrl.dataRaw) {\n      return this.$q.when([]);\n    }\n    const columns = this.transformers[this.panel.transform].getColumns(this.panelCtrl.dataRaw);\n    const segments = _.map(columns, (c: any) => this.uiSegmentSrv.newSegment({ value: c.text }));\n    return this.$q.when(segments);\n  }\n\n  addColumn() {\n    const columns = transformers[this.panel.transform].getColumns(this.panelCtrl.dataRaw);\n    const column = _.find(columns, { text: this.addColumnSegment.value });\n\n    if (column) {\n      this.panel.columns.push(column);\n      this.render();\n    }\n\n    const plusButton = this.uiSegmentSrv.newPlusButton();\n    this.addColumnSegment.html = plusButton.html;\n    this.addColumnSegment.value = plusButton.value;\n  }\n\n  transformChanged() {\n    this.panel.columns = [];\n    if (this.panel.transform === 'timeseries_aggregations') {\n      this.panel.columns.push({ text: 'Avg', value: 'avg' });\n    }\n\n    this.updateTransformHints();\n    this.render();\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  removeColumn(column) {\n    this.panel.columns = _.without(this.panel.columns, column);\n    this.panelCtrl.render();\n  }\n}\n\n/** @ngInject */\nexport function tablePanelEditor($q, uiSegmentSrv) {\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/plugins/tradelab-bidder-table/editor.html',\n    controller: TablePanelEditorCtrl,\n  };\n}\n","import _ from 'lodash';\nimport { getValueFormats } from '@grafana/ui';\n\nexport class ColumnOptionsCtrl {\n  panel: any;\n  panelCtrl: any;\n  colorModes: any;\n  columnStyles: any;\n  columnTypes: any;\n  fontSizes: any;\n  dateFormats: any;\n  addColumnSegment: any;\n  unitFormats: any;\n  getColumnNames: any;\n  activeStyleIndex: number;\n  mappingTypes: any;\n\n  /** @ngInject */\n  constructor($scope) {\n    $scope.editor = this;\n\n    this.activeStyleIndex = 0;\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n    this.unitFormats = getValueFormats();\n    this.colorModes = [\n      { text: 'Disabled', value: null },\n      { text: 'Cell', value: 'cell' },\n      { text: 'Value', value: 'value' },\n      { text: 'Row', value: 'row' },\n    ];\n    this.columnTypes = [\n      { text: 'Number', value: 'number' },\n      { text: 'Delta', value: 'delta' },\n      { text: 'String', value: 'string' },\n      { text: 'Date', value: 'date' },\n      { text: 'Hidden', value: 'hidden' },\n    ];\n    this.fontSizes = ['80%', '90%', '100%', '110%', '120%', '130%', '150%', '160%', '180%', '200%', '220%', '250%'];\n    this.dateFormats = [\n      { text: 'YYYY-MM-DD HH:mm:ss', value: 'YYYY-MM-DD HH:mm:ss' },\n      { text: 'YYYY-MM-DD HH:mm:ss.SSS', value: 'YYYY-MM-DD HH:mm:ss.SSS' },\n      { text: 'MM/DD/YY h:mm:ss a', value: 'MM/DD/YY h:mm:ss a' },\n      { text: 'MMMM D, YYYY LT', value: 'MMMM D, YYYY LT' },\n      { text: 'YYYY-MM-DD', value: 'YYYY-MM-DD' },\n    ];\n    this.mappingTypes = [{ text: 'Value to text', value: 1 }, { text: 'Range to text', value: 2 }];\n\n    this.getColumnNames = () => {\n      if (!this.panelCtrl.table) {\n        return [];\n      }\n      return _.map(this.panelCtrl.table.columns, (col: any) => {\n        return col.text;\n      });\n    };\n\n    this.onColorChange = this.onColorChange.bind(this);\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  setUnitFormat(column, subItem) {\n    column.unit = subItem.value;\n    if (subItem.value === 'percentunit') {\n      column.display = 'val';\n    }\n    this.panelCtrl.render();\n  }\n\n  addColumnStyle() {\n    const newStyleRule = {\n      unit: 'short',\n      type: 'number',\n      alias: '',\n      decimals: 2,\n      colors: ['rgba(245, 54, 54, 0.9)', 'rgba(237, 129, 40, 0.89)', 'rgba(50, 172, 45, 0.97)'],\n      colorMode: null,\n      pattern: '',\n      dateFormat: 'YYYY-MM-DD HH:mm:ss',\n      thresholds: [],\n      mappingType: 1,\n    };\n\n    const styles = this.panel.styles;\n    const stylesCount = styles.length;\n    let indexToInsert = stylesCount;\n\n    // check if last is a catch all rule, then add it before that one\n    if (stylesCount > 0) {\n      const last = styles[stylesCount - 1];\n      if (last.pattern === '/.*/') {\n        indexToInsert = stylesCount - 1;\n      }\n    }\n\n    styles.splice(indexToInsert, 0, newStyleRule);\n    this.activeStyleIndex = indexToInsert;\n  }\n\n  removeColumnStyle(style) {\n    this.panel.styles = _.without(this.panel.styles, style);\n  }\n\n  invertColorOrder(index) {\n    const ref = this.panel.styles[index].colors;\n    const copy = ref[0];\n    ref[0] = ref[2];\n    ref[2] = copy;\n    this.panelCtrl.render();\n  }\n\n  onColorChange(styleIndex, colorIndex) {\n    return newColor => {\n      this.panel.styles[styleIndex].colors[colorIndex] = newColor;\n      this.render();\n    };\n  }\n\n  addValueMap(style) {\n    if (!style.valueMaps) {\n      style.valueMaps = [];\n    }\n    style.valueMaps.push({ value: '', text: '' });\n    this.panelCtrl.render();\n  }\n\n  removeValueMap(style, index) {\n    style.valueMaps.splice(index, 1);\n    this.panelCtrl.render();\n  }\n\n  addRangeMap(style) {\n    if (!style.rangeMaps) {\n      style.rangeMaps = [];\n    }\n    style.rangeMaps.push({ from: '', to: '', text: '' });\n    this.panelCtrl.render();\n  }\n\n  removeRangeMap(style, index) {\n    style.rangeMaps.splice(index, 1);\n    this.panelCtrl.render();\n  }\n}\n\n/** @ngInject */\nexport function columnOptionsTab($q, uiSegmentSrv) {\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/plugins/tradelab-bidder-table/column_options.html',\n    controller: ColumnOptionsCtrl,\n  };\n}\n","import _ from 'lodash';\nimport $ from 'jquery';\nimport { MetricsPanelCtrl, loadPluginCss } from 'grafana/app/plugins/sdk';\nimport config from 'grafana/app/core/config';\nimport { transformDataToTable } from './transformers';\nimport { tablePanelEditor } from './editor';\nimport { columnOptionsTab } from './column_options';\nimport { TableRenderer } from './renderer';\n\nclass TablePanelCtrl extends MetricsPanelCtrl {\n  static templateUrl = 'module.html';\n\n  pageIndex: number;\n  dataRaw: any;\n  table: any;\n  renderer: any;\n\n  panelDefaults = {\n    targets: [{}],\n    transform: 'timeseries_to_columns',\n    pageSize: null,\n    showHeader: true,\n    styles: [\n      {\n        type: 'date',\n        pattern: 'Time',\n        alias: 'Time',\n        dateFormat: 'YYYY-MM-DD HH:mm:ss',\n      },\n      {\n        unit: 'short',\n        type: 'number',\n        alias: '',\n        decimals: 2,\n        colors: ['rgba(245, 54, 54, 0.9)', 'rgba(237, 129, 40, 0.89)', 'rgba(50, 172, 45, 0.97)'],\n        colorMode: null,\n        pattern: '/.*/',\n        thresholds: [],\n      },\n    ],\n    columns: [],\n    scroll: true,\n    fontSize: '100%',\n    sort: { col: 0, desc: true },\n  };\n\n  /** @ngInject */\n  constructor($scope, $injector, templateSrv, private annotationsSrv, private $sanitize, private variableSrv) {\n    super($scope, $injector);\n\n    this.pageIndex = 0;\n\n    if (this.panel.styles === void 0) {\n      this.panel.styles = this.panel.columns;\n      this.panel.columns = this.panel.fields;\n      delete this.panel.columns;\n      delete this.panel.fields;\n    }\n\n    _.defaults(this.panel, this.panelDefaults);\n\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', tablePanelEditor, 2);\n    this.addEditorTab('Column Styles', columnOptionsTab, 3);\n  }\n\n  onInitPanelActions(actions) {\n    actions.push({ text: 'Export CSV', click: 'ctrl.exportCsv()' });\n  }\n\n  issueQueries(datasource) {\n    this.pageIndex = 0;\n\n    if (this.panel.transform === 'annotations') {\n      return this.annotationsSrv\n        .getAnnotations({\n          dashboard: this.dashboard,\n          panel: this.panel,\n          range: this.range,\n        })\n        .then(annotations => {\n          return { data: annotations };\n        });\n    }\n\n    return super.issueQueries(datasource);\n  }\n\n  onDataError(err) {\n    this.dataRaw = [];\n    this.render();\n  }\n\n  onDataReceived(dataList) {\n    this.dataRaw = dataList;\n    this.pageIndex = 0;\n\n    // automatically correct transform mode based on data\n    if (this.dataRaw && this.dataRaw.length) {\n      if (this.dataRaw[0].type === 'table') {\n        this.panel.transform = 'table';\n      } else {\n        if (this.dataRaw[0].type === 'docs') {\n          this.panel.transform = 'json';\n        } else {\n          if (this.panel.transform === 'table' || this.panel.transform === 'json') {\n            this.panel.transform = 'timeseries_to_rows';\n          }\n        }\n      }\n    }\n\n    this.render();\n  }\n\n  render() {\n    this.table = transformDataToTable(this.dataRaw, this.panel);\n    this.table.sort(this.panel.sort);\n\n    this.renderer = new TableRenderer(\n      this.panel,\n      this.table,\n      this.dashboard.isTimezoneUtc(),\n      this.$sanitize,\n      this.templateSrv,\n      config.theme.type\n    );\n\n    return super.render(this.table);\n  }\n\n  toggleColumnSort(col, colIndex) {\n    // remove sort flag from current column\n    if (this.table.columns[this.panel.sort.col]) {\n      this.table.columns[this.panel.sort.col].sort = false;\n    }\n\n    if (this.panel.sort.col === colIndex) {\n      if (this.panel.sort.desc) {\n        this.panel.sort.desc = false;\n      } else {\n        this.panel.sort.col = null;\n      }\n    } else {\n      this.panel.sort.col = colIndex;\n      this.panel.sort.desc = true;\n    }\n    this.render();\n  }\n\n  exportCsv() {\n    const scope = this.$scope.$new(true);\n    scope.tableData = this.renderer.render_values();\n    scope.panel = 'table';\n    this.publishAppEvent('show-modal', {\n      templateHtml: '<export-data-modal panel=\"panel\" data=\"tableData\"></export-data-modal>',\n      scope,\n      modalClass: 'modal--narrow',\n    });\n  }\n\n  link(scope, elem, attrs, ctrl: TablePanelCtrl) {\n    let data;\n    const panel = ctrl.panel;\n    let pageCount = 0;\n\n    function getTableHeight() {\n      let panelHeight = ctrl.height;\n\n      if (pageCount > 1) {\n        panelHeight -= 26;\n      }\n\n      return panelHeight - 31 + 'px';\n    }\n\n    function appendTableRows(tbodyElem) {\n      ctrl.renderer.setTable(data);\n      tbodyElem.empty();\n      tbodyElem.html(ctrl.renderer.render(ctrl.pageIndex));\n    }\n\n    function switchPage(e) {\n      const el = $(e.currentTarget);\n      ctrl.pageIndex = parseInt(el.text(), 10) - 1;\n      renderPanel();\n    }\n\n    function appendPaginationControls(footerElem) {\n      footerElem.empty();\n\n      const pageSize = panel.pageSize || 100;\n      pageCount = Math.ceil(data.rows.length / pageSize);\n      if (pageCount === 1) {\n        return;\n      }\n\n      const startPage = Math.max(ctrl.pageIndex - 3, 0);\n      const endPage = Math.min(pageCount, startPage + 9);\n\n      const paginationList = $('<ul></ul>');\n\n      for (let i = startPage; i < endPage; i++) {\n        const activeClass = i === ctrl.pageIndex ? 'active' : '';\n        const pageLinkElem = $(\n          '<li><a class=\"table-panel-page-link pointer ' + activeClass + '\">' + (i + 1) + '</a></li>'\n        );\n        paginationList.append(pageLinkElem);\n      }\n\n      footerElem.append(paginationList);\n    }\n\n    function renderPanel() {\n      const panelElem = elem.parents('.panel-content');\n      const rootElem = elem.find('.table-panel-scroll');\n      const tbodyElem = elem.find('tbody');\n      const footerElem = elem.find('.table-panel-footer');\n\n      elem.css({ 'font-size': panel.fontSize });\n      panelElem.addClass('table-panel-content');\n\n      appendTableRows(tbodyElem);\n      appendPaginationControls(footerElem);\n\n      rootElem.css({ 'max-height': panel.scroll ? getTableHeight() : '' });\n    }\n\n    // hook up link tooltips\n    elem.tooltip({\n      selector: '[data-link-tooltip]',\n    });\n\n    function addFilterClicked(e) {\n      const filterData = $(e.currentTarget).data();\n      const options = {\n        datasource: panel.datasource,\n        key: data.columns[filterData.column].text,\n        value: data.rows[filterData.row][filterData.column],\n        operator: filterData.operator,\n      };\n\n      ctrl.variableSrv.setAdhocFilter(options);\n    }\n\n    elem.on('click', '.table-panel-page-link', switchPage);\n    elem.on('click', '.table-panel-filter-link', addFilterClicked);\n\n    const unbindDestroy = scope.$on('$destroy', () => {\n      elem.off('click', '.table-panel-page-link');\n      elem.off('click', '.table-panel-filter-link');\n      unbindDestroy();\n    });\n\n    ctrl.events.on('render', renderData => {\n      data = renderData || data;\n      if (data) {\n        renderPanel();\n      }\n      ctrl.renderingCompleted();\n    });\n  }\n}\nloadPluginCss({\n  dark: 'plugins/tradelab-bidder-table/bidder-panel.css',\n  light: 'plugins/tradelab-bidder-table/bidder-panel.css'\n});\nexport { TablePanelCtrl, TablePanelCtrl as PanelCtrl };\n"],"sourceRoot":""}